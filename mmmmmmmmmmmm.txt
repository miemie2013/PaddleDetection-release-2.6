## 快速开始


pip install sklearn pandas -i https://pypi.tuna.tsinghua.edu.cn/simple



### 训练

# 单卡
python tools/train.py -c configs/ppyoloe/distill/ppyoloe_plus_crn_l_80e_coco_distill.yml --slim_config configs/slim/distill/ppyoloe_plus_distill_x_distill_l.yml


# 多卡
python -m paddle.distributed.launch --log_dir=ppyoloe_plus_distill_x_distill_l/ --gpus 0,1,2,3,4,5,6,7 tools/train.py -c configs/ppyoloe/distill/ppyoloe_plus_crn_l_80e_coco_distill.yml --slim_config configs/slim/distill/ppyoloe_plus_distill_x_distill_l.yml




- `-c`: 指定模型配置文件，也是student配置文件。
- `--slim_config`: 指定压缩策略配置文件，也是teacher配置文件。


----------------------- 迁移学习，带上-c（--ckpt）参数读取预训练模型。 -----------------------
读 COCO 预训练模型（实际上由obj365 fine-tune 得到）进行fine-tune：
单卡：
python tools/train.py -c configs/ppyoloe/ppyoloe_plus_crn_s_16e_voc2012.yml --eval

nohup python tools/train.py -c configs/ppyoloe/ppyoloe_plus_crn_s_16e_voc2012.yml --eval     > ppyoloe_plus_s_from_coco.log 2>&1 &

实测 ppyoloe_plus_s_from_coco 的AP可以到达
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.628
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.817
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.693
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.244
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.475
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.719
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.500
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.748
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.791
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.499
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.708
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.855


日志见 ppyoloe_plus_s_from_coco.log



- - - - - - -
双卡（暂时不要折腾多卡）：
docs/tutorials/DistributedTraining_cn.md

export CUDA_VISIBLE_DEVICES=0,1

nohup python -m paddle.distributed.launch --gpus 0,1 tools/train.py -c configs/ppyoloe/ppyoloe_plus_crn_s_16e_voc2012.yml --eval     > ppyoloe_plus_s_from_coco.log 2>&1 &







----------------------- 知识蒸馏 -----------------------
1.先训练老师模型:
读 COCO 预训练模型（实际上由obj365 fine-tune 得到）进行fine-tune：
python tools/train.py -c configs/ppyoloe/ppyoloe_plus_crn_l_16e_voc2012.yml --eval


nohup python tools/train.py -c configs/ppyoloe/ppyoloe_plus_crn_l_16e_voc2012.yml --eval     > ppyoloe_plus_l_from_coco.log 2>&1 &




实测 ppyoloe_plus_l_from_coco 的AP可以到达
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.689
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.856
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.749
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.290
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.536
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.779
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.530
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.788
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.828
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.534
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.755
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.889

日志见 ppyoloe_plus_l_from_coco.log



2.蒸馏:
读 COCO 预训练模型（实际上由obj365 fine-tune 得到）进行fine-tune：
nohup python tools/train.py -c configs/ppyoloe/distill/ppyoloe_plus_crn_s_16e_voc2012_distill.yml --slim_config configs/slim/distill/ppyoloe_plus_distill_l_distill_s.yml --eval     > ppyoloe_l2s.log 2>&1 &



恢复训练:


(单卡调试)


实测 ppyoloe_plus_s_from_coco 的AP(0.50:0.95)可以到达0.xxx+、AP(0.50)可以到达0.xxx+、AP(small)可以到达0.xxx+。
日志见 train_ppyolo_in_voc2012/ppyoloe_plus_s_distill_l2s.txt
